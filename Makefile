#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -IC:/msys64/mingw32/include
CFLAGS = -Wall
RESINC = 
LIBDIR = -LC:/msys64/mingw32/lib
LIB = -lmingw32 -lSDL2main SDL2.dll -luser32 -lgdi32 -lwinmm -ldxguid
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -O3 -g -IC:/msys64/mingw32/include/SDL2 -std=gnu++20 -fconcepts-diagnostics-depth=2 -D__LITTLE_ENDIAN__
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)-lSDL2_image
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/dbg
DEP_DEBUG = 
OUT_DEBUG = bin/dbg/u8-emu-frontend-cpp

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O3 -IC:/msys64/mingw32/include/SDL2 -std=gnu++20 -D__LITTLE_ENDIAN__
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)-lSDL2_image
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/release
DEP_RELEASE = 
OUT_RELEASE = bin/release/u8-emu-frontend-cpp

OBJ_DEBUG = $(OBJDIR_DEBUG)/u8_emu/src/core/regs.o $(OBJDIR_DEBUG)/u8_emu/src/core/mem.o $(OBJDIR_DEBUG)/u8_emu/src/core/instr_impl.o $(OBJDIR_DEBUG)/u8_emu/src/core/instr.o $(OBJDIR_DEBUG)/u8_emu/src/core/core.o $(OBJDIR_DEBUG)/startupui/startupui.o $(OBJDIR_DEBUG)/startupui/rominfo.o $(OBJDIR_DEBUG)/peripheral/wdt.o $(OBJDIR_DEBUG)/peripheral/timer.o $(OBJDIR_DEBUG)/peripheral/standby.o $(OBJDIR_DEBUG)/peripheral/screen.o $(OBJDIR_DEBUG)/peripheral/keyboard.o $(OBJDIR_DEBUG)/peripheral/interrupts.o $(OBJDIR_DEBUG)/peripheral/bcd.o $(OBJDIR_DEBUG)/peripheral/battery.o $(OBJDIR_DEBUG)/nxu8_disas/src/lib/nxu8_instr.o $(OBJDIR_DEBUG)/nxu8_disas/src/lib/nxu8_decode.o $(OBJDIR_DEBUG)/mcu/mcu.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/imgui/imgui_widgets.o $(OBJDIR_DEBUG)/imgui/imgui_tables.o $(OBJDIR_DEBUG)/imgui/imgui_impl_sdlrenderer2.o $(OBJDIR_DEBUG)/imgui/imgui_impl_sdl2.o $(OBJDIR_DEBUG)/imgui/imgui_draw.o $(OBJDIR_DEBUG)/imgui/imgui.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/u8_emu/src/core/regs.o $(OBJDIR_RELEASE)/u8_emu/src/core/mem.o $(OBJDIR_RELEASE)/u8_emu/src/core/instr_impl.o $(OBJDIR_RELEASE)/u8_emu/src/core/instr.o $(OBJDIR_RELEASE)/u8_emu/src/core/core.o $(OBJDIR_RELEASE)/startupui/startupui.o $(OBJDIR_RELEASE)/startupui/rominfo.o $(OBJDIR_RELEASE)/peripheral/wdt.o $(OBJDIR_RELEASE)/peripheral/timer.o $(OBJDIR_RELEASE)/peripheral/standby.o $(OBJDIR_RELEASE)/peripheral/screen.o $(OBJDIR_RELEASE)/peripheral/keyboard.o $(OBJDIR_RELEASE)/peripheral/interrupts.o $(OBJDIR_RELEASE)/peripheral/bcd.o $(OBJDIR_RELEASE)/peripheral/battery.o $(OBJDIR_RELEASE)/nxu8_disas/src/lib/nxu8_instr.o $(OBJDIR_RELEASE)/nxu8_disas/src/lib/nxu8_decode.o $(OBJDIR_RELEASE)/mcu/mcu.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/imgui/imgui_widgets.o $(OBJDIR_RELEASE)/imgui/imgui_tables.o $(OBJDIR_RELEASE)/imgui/imgui_impl_sdlrenderer2.o $(OBJDIR_RELEASE)/imgui/imgui_impl_sdl2.o $(OBJDIR_RELEASE)/imgui/imgui_draw.o $(OBJDIR_RELEASE)/imgui/imgui.o

all: before_build build_debug build_release after_build

clean: clean_debug clean_release

before_build: 

after_build: 
	XCOPY $(#sdl2)\bin\*.dll $(TARGET_OUTPUT_DIR) /D /Y

before_debug: 
	test -d bin/dbg || mkdir -p bin/dbg
	test -d $(OBJDIR_DEBUG)/u8_emu/src/core || mkdir -p $(OBJDIR_DEBUG)/u8_emu/src/core
	test -d $(OBJDIR_DEBUG)/startupui || mkdir -p $(OBJDIR_DEBUG)/startupui
	test -d $(OBJDIR_DEBUG)/peripheral || mkdir -p $(OBJDIR_DEBUG)/peripheral
	test -d $(OBJDIR_DEBUG)/nxu8_disas/src/lib || mkdir -p $(OBJDIR_DEBUG)/nxu8_disas/src/lib
	test -d $(OBJDIR_DEBUG)/mcu || mkdir -p $(OBJDIR_DEBUG)/mcu
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/imgui || mkdir -p $(OBJDIR_DEBUG)/imgui

after_debug: 

build_debug: before_debug out_debug after_debug

debug: before_build build_debug after_build

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/u8_emu/src/core/regs.o: u8_emu/src/core/regs.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c u8_emu/src/core/regs.c -o $(OBJDIR_DEBUG)/u8_emu/src/core/regs.o

$(OBJDIR_DEBUG)/u8_emu/src/core/mem.o: u8_emu/src/core/mem.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c u8_emu/src/core/mem.c -o $(OBJDIR_DEBUG)/u8_emu/src/core/mem.o

$(OBJDIR_DEBUG)/u8_emu/src/core/instr_impl.o: u8_emu/src/core/instr_impl.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c u8_emu/src/core/instr_impl.c -o $(OBJDIR_DEBUG)/u8_emu/src/core/instr_impl.o

$(OBJDIR_DEBUG)/u8_emu/src/core/instr.o: u8_emu/src/core/instr.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c u8_emu/src/core/instr.c -o $(OBJDIR_DEBUG)/u8_emu/src/core/instr.o

$(OBJDIR_DEBUG)/u8_emu/src/core/core.o: u8_emu/src/core/core.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c u8_emu/src/core/core.c -o $(OBJDIR_DEBUG)/u8_emu/src/core/core.o

$(OBJDIR_DEBUG)/startupui/startupui.o: startupui/startupui.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c startupui/startupui.cpp -o $(OBJDIR_DEBUG)/startupui/startupui.o

$(OBJDIR_DEBUG)/startupui/rominfo.o: startupui/rominfo.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c startupui/rominfo.cpp -o $(OBJDIR_DEBUG)/startupui/rominfo.o

$(OBJDIR_DEBUG)/peripheral/wdt.o: peripheral/wdt.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c peripheral/wdt.cpp -o $(OBJDIR_DEBUG)/peripheral/wdt.o

$(OBJDIR_DEBUG)/peripheral/timer.o: peripheral/timer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c peripheral/timer.cpp -o $(OBJDIR_DEBUG)/peripheral/timer.o

$(OBJDIR_DEBUG)/peripheral/standby.o: peripheral/standby.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c peripheral/standby.cpp -o $(OBJDIR_DEBUG)/peripheral/standby.o

$(OBJDIR_DEBUG)/peripheral/screen.o: peripheral/screen.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c peripheral/screen.cpp -o $(OBJDIR_DEBUG)/peripheral/screen.o

$(OBJDIR_DEBUG)/peripheral/keyboard.o: peripheral/keyboard.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c peripheral/keyboard.cpp -o $(OBJDIR_DEBUG)/peripheral/keyboard.o

$(OBJDIR_DEBUG)/peripheral/interrupts.o: peripheral/interrupts.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c peripheral/interrupts.cpp -o $(OBJDIR_DEBUG)/peripheral/interrupts.o

$(OBJDIR_DEBUG)/peripheral/bcd.o: peripheral/bcd.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c peripheral/bcd.cpp -o $(OBJDIR_DEBUG)/peripheral/bcd.o

$(OBJDIR_DEBUG)/peripheral/battery.o: peripheral/battery.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c peripheral/battery.cpp -o $(OBJDIR_DEBUG)/peripheral/battery.o

$(OBJDIR_DEBUG)/nxu8_disas/src/lib/nxu8_instr.o: nxu8_disas/src/lib/nxu8_instr.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c nxu8_disas/src/lib/nxu8_instr.c -o $(OBJDIR_DEBUG)/nxu8_disas/src/lib/nxu8_instr.o

$(OBJDIR_DEBUG)/nxu8_disas/src/lib/nxu8_decode.o: nxu8_disas/src/lib/nxu8_decode.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c nxu8_disas/src/lib/nxu8_decode.c -o $(OBJDIR_DEBUG)/nxu8_disas/src/lib/nxu8_decode.o

$(OBJDIR_DEBUG)/mcu/mcu.o: mcu/mcu.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c mcu/mcu.cpp -o $(OBJDIR_DEBUG)/mcu/mcu.o

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/imgui/imgui_widgets.o: imgui/imgui_widgets.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c imgui/imgui_widgets.cpp -o $(OBJDIR_DEBUG)/imgui/imgui_widgets.o

$(OBJDIR_DEBUG)/imgui/imgui_tables.o: imgui/imgui_tables.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c imgui/imgui_tables.cpp -o $(OBJDIR_DEBUG)/imgui/imgui_tables.o

$(OBJDIR_DEBUG)/imgui/imgui_impl_sdlrenderer2.o: imgui/imgui_impl_sdlrenderer2.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c imgui/imgui_impl_sdlrenderer2.cpp -o $(OBJDIR_DEBUG)/imgui/imgui_impl_sdlrenderer2.o

$(OBJDIR_DEBUG)/imgui/imgui_impl_sdl2.o: imgui/imgui_impl_sdl2.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c imgui/imgui_impl_sdl2.cpp -o $(OBJDIR_DEBUG)/imgui/imgui_impl_sdl2.o

$(OBJDIR_DEBUG)/imgui/imgui_draw.o: imgui/imgui_draw.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c imgui/imgui_draw.cpp -o $(OBJDIR_DEBUG)/imgui/imgui_draw.o

$(OBJDIR_DEBUG)/imgui/imgui.o: imgui/imgui.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c imgui/imgui.cpp -o $(OBJDIR_DEBUG)/imgui/imgui.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/dbg
	rm -rf $(OBJDIR_DEBUG)/u8_emu/src/core
	rm -rf $(OBJDIR_DEBUG)/startupui
	rm -rf $(OBJDIR_DEBUG)/peripheral
	rm -rf $(OBJDIR_DEBUG)/nxu8_disas/src/lib
	rm -rf $(OBJDIR_DEBUG)/mcu
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/imgui

before_release: 
	test -d bin/release || mkdir -p bin/release
	test -d $(OBJDIR_RELEASE)/u8_emu/src/core || mkdir -p $(OBJDIR_RELEASE)/u8_emu/src/core
	test -d $(OBJDIR_RELEASE)/startupui || mkdir -p $(OBJDIR_RELEASE)/startupui
	test -d $(OBJDIR_RELEASE)/peripheral || mkdir -p $(OBJDIR_RELEASE)/peripheral
	test -d $(OBJDIR_RELEASE)/nxu8_disas/src/lib || mkdir -p $(OBJDIR_RELEASE)/nxu8_disas/src/lib
	test -d $(OBJDIR_RELEASE)/mcu || mkdir -p $(OBJDIR_RELEASE)/mcu
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/imgui || mkdir -p $(OBJDIR_RELEASE)/imgui

after_release: 

build_release: before_release out_release after_release

release: before_build build_release after_build

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/u8_emu/src/core/regs.o: u8_emu/src/core/regs.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c u8_emu/src/core/regs.c -o $(OBJDIR_RELEASE)/u8_emu/src/core/regs.o

$(OBJDIR_RELEASE)/u8_emu/src/core/mem.o: u8_emu/src/core/mem.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c u8_emu/src/core/mem.c -o $(OBJDIR_RELEASE)/u8_emu/src/core/mem.o

$(OBJDIR_RELEASE)/u8_emu/src/core/instr_impl.o: u8_emu/src/core/instr_impl.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c u8_emu/src/core/instr_impl.c -o $(OBJDIR_RELEASE)/u8_emu/src/core/instr_impl.o

$(OBJDIR_RELEASE)/u8_emu/src/core/instr.o: u8_emu/src/core/instr.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c u8_emu/src/core/instr.c -o $(OBJDIR_RELEASE)/u8_emu/src/core/instr.o

$(OBJDIR_RELEASE)/u8_emu/src/core/core.o: u8_emu/src/core/core.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c u8_emu/src/core/core.c -o $(OBJDIR_RELEASE)/u8_emu/src/core/core.o

$(OBJDIR_RELEASE)/startupui/startupui.o: startupui/startupui.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c startupui/startupui.cpp -o $(OBJDIR_RELEASE)/startupui/startupui.o

$(OBJDIR_RELEASE)/startupui/rominfo.o: startupui/rominfo.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c startupui/rominfo.cpp -o $(OBJDIR_RELEASE)/startupui/rominfo.o

$(OBJDIR_RELEASE)/peripheral/wdt.o: peripheral/wdt.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c peripheral/wdt.cpp -o $(OBJDIR_RELEASE)/peripheral/wdt.o

$(OBJDIR_RELEASE)/peripheral/timer.o: peripheral/timer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c peripheral/timer.cpp -o $(OBJDIR_RELEASE)/peripheral/timer.o

$(OBJDIR_RELEASE)/peripheral/standby.o: peripheral/standby.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c peripheral/standby.cpp -o $(OBJDIR_RELEASE)/peripheral/standby.o

$(OBJDIR_RELEASE)/peripheral/screen.o: peripheral/screen.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c peripheral/screen.cpp -o $(OBJDIR_RELEASE)/peripheral/screen.o

$(OBJDIR_RELEASE)/peripheral/keyboard.o: peripheral/keyboard.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c peripheral/keyboard.cpp -o $(OBJDIR_RELEASE)/peripheral/keyboard.o

$(OBJDIR_RELEASE)/peripheral/interrupts.o: peripheral/interrupts.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c peripheral/interrupts.cpp -o $(OBJDIR_RELEASE)/peripheral/interrupts.o

$(OBJDIR_RELEASE)/peripheral/bcd.o: peripheral/bcd.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c peripheral/bcd.cpp -o $(OBJDIR_RELEASE)/peripheral/bcd.o

$(OBJDIR_RELEASE)/peripheral/battery.o: peripheral/battery.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c peripheral/battery.cpp -o $(OBJDIR_RELEASE)/peripheral/battery.o

$(OBJDIR_RELEASE)/nxu8_disas/src/lib/nxu8_instr.o: nxu8_disas/src/lib/nxu8_instr.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c nxu8_disas/src/lib/nxu8_instr.c -o $(OBJDIR_RELEASE)/nxu8_disas/src/lib/nxu8_instr.o

$(OBJDIR_RELEASE)/nxu8_disas/src/lib/nxu8_decode.o: nxu8_disas/src/lib/nxu8_decode.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c nxu8_disas/src/lib/nxu8_decode.c -o $(OBJDIR_RELEASE)/nxu8_disas/src/lib/nxu8_decode.o

$(OBJDIR_RELEASE)/mcu/mcu.o: mcu/mcu.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c mcu/mcu.cpp -o $(OBJDIR_RELEASE)/mcu/mcu.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/imgui/imgui_widgets.o: imgui/imgui_widgets.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c imgui/imgui_widgets.cpp -o $(OBJDIR_RELEASE)/imgui/imgui_widgets.o

$(OBJDIR_RELEASE)/imgui/imgui_tables.o: imgui/imgui_tables.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c imgui/imgui_tables.cpp -o $(OBJDIR_RELEASE)/imgui/imgui_tables.o

$(OBJDIR_RELEASE)/imgui/imgui_impl_sdlrenderer2.o: imgui/imgui_impl_sdlrenderer2.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c imgui/imgui_impl_sdlrenderer2.cpp -o $(OBJDIR_RELEASE)/imgui/imgui_impl_sdlrenderer2.o

$(OBJDIR_RELEASE)/imgui/imgui_impl_sdl2.o: imgui/imgui_impl_sdl2.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c imgui/imgui_impl_sdl2.cpp -o $(OBJDIR_RELEASE)/imgui/imgui_impl_sdl2.o

$(OBJDIR_RELEASE)/imgui/imgui_draw.o: imgui/imgui_draw.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c imgui/imgui_draw.cpp -o $(OBJDIR_RELEASE)/imgui/imgui_draw.o

$(OBJDIR_RELEASE)/imgui/imgui.o: imgui/imgui.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c imgui/imgui.cpp -o $(OBJDIR_RELEASE)/imgui/imgui.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/release
	rm -rf $(OBJDIR_RELEASE)/u8_emu/src/core
	rm -rf $(OBJDIR_RELEASE)/startupui
	rm -rf $(OBJDIR_RELEASE)/peripheral
	rm -rf $(OBJDIR_RELEASE)/nxu8_disas/src/lib
	rm -rf $(OBJDIR_RELEASE)/mcu
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/imgui

.PHONY: before_build after_build before_debug after_debug clean_debug before_release after_release clean_release

